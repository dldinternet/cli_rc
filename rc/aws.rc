#!/bin/bash

. ${RC_DIR}/pathmunge.rc

# #echo "${bold}${fg_white}pathmunge${reset}"
# #set | grep pathmunge | egrep -v -e '^(_=)'
# declare -f pathmunge > /dev/null;
# if [ 0 -eq $? ] ; then
	pathmunge ${EC2_HOME}/bin after
# else
# 	export PATH=$PATH:${EC2_HOME}/bin
# fi

AWS_ACCESS_ID=$AWS_ACCESS_KEY
# Deprecated
unset EC2_PRIVATE_KEY
unset EC2_CERT

#set -x
export AWS_S3CFG="${RC_DIR}/${RC_CLOUD}/${RC_ACCT}/${RC_USER}.s3cfg" # /${RC_ZONE}
if [ -f $AWS_S3CFG ] ; then
	echo "alias s3cmd='/usr/local/bin/s3cmd --config=\$AWS_S3CFG'" >${RC_DIR}/s3cfg.alias.rc
fi
export KNIFE_WHISK_CONFIG="${RC_DIR}/${RC_CLOUD}/${RC_ACCT}/whisk.yaml"

#set +x
export AWS_SECURITY_GROUPS; if [ -z "$AWS_SECURITY_GROUPS" ] ; then AWS_SECURITY_GROUPS='default'  ; fi
export AWS_INSTANCE_TYPE  ; if [ -z "$AWS_INSTANCE_TYPE"   ] ; then   AWS_INSTANCE_TYPE='t1.micro' ; fi

# Support other tools / SDKs
export     AWS_ACCESS_KEY_ID;     AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
export AWS_SECRET_ACCESS_KEY; AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY
export              AWS_ZONE;              AWS_ZONE=${AWS_REGION}a
export    AWS_DEFAULT_REGION;    AWS_DEFAULT_REGION=${AWS_REGION}
export    AWS_DEFAULT_OUTPUT;    AWS_DEFAULT_OUTPUT=text

#complete -C aws_completer aws
